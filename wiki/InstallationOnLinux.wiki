!HowTo install the library (and examples) on Linux. 

Tested for Ubuntu 11.10 and 12.04.

=Dependencies=
 * OpenCV (>= 2.3): 
 {{{ 
 $ sudo apt-get install libopencv-dev
 }}}
 * Boost (>= 1.46): 
 {{{ 
 $ sudo apt-get install libboost-dev libboost-filesystem-dev libboost-system-dev libboost-date-time1.4.6-dev libboost-thread1.46-dev
 }}}
 * Aravis (>= 0.1.15) (optional - only for Basler cameras):
   # download and extract the newest library from http://ftp.gnome.org/pub/gnome/sources/aravis/
   # go into the directory and _configure_ (see _./configure --help_), _make_ and _make install_ the library

=TIY library and examples=

Two options are available for installation:
 * Pre-build package: one single installation file, no building necessary
 * Build from source: further customization posible, also if no suitable package available, based on _cmake_

==A. Pre-build package==

_.deb_ packages with different labels are available in the [http://code.google.com/p/tiy/downloads/list Downloads] section:
 * 64-bit (_amd64_) or 32-bit (_i386_)
 * With Aravis library for Basler camera support (_ARV_) or without
 * With examples (_EX_) or without
 * Examples only (_tiy`_`server_ or _tiy`_`client_)

 # Download the newest _tiy-X.X.-linux_ _.deb_ package from the [http://code.google.com/p/tiy/downloads/list Downloads] area.
 # Install the package by double clicking on it or by (e.g.):
 {{{ 
 sudo dpkg -i tiy-0.1.-linux-amd64.deb 
 }}} 
 removal of _tiy_, _tiy`_`server_ or _tiy`_`client_ by (e.g.):
 {{{ 
 sudo dpkg -r tiy
 }}}

==B. Build from source==

 # Download and _unzip_ the _tiy-X.X..zip_ file from the [http://code.google.com/p/tiy/downloads/list Downloads] section
 # Go into the _Release_ folder an use _cmake_ to build the make file
{{{
$ ccmake ../src
}}}
 Change the options as you want to
  * _BUILD`_`client_ _ON_: the client example will be build
  * _BUILD`_`linux_x64_ _ON_: build for 64-bit
  * _BUILD`_`server_ _ON_: the client example will be build
  * _USE`_`ARAVIS_ _ON_: also build the Aravis library for Basler camera support
 and set the option _CMAKE`_`BUILD`_`TYPE_ to _Release_.
 Press the _C_ key a few times and then the _G_ key.
 # _make_ the project:
{{{
$ make
}}}
 # Install the project by
 {{{
 $ make install
 }}}
 , which is more difficult to remove or build a package by
 {{{
 $ make package
 }}}
 and install it as under point A.2