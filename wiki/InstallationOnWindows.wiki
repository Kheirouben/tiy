Installation instructions for the TIY library (and examples) on Windows. 

Tested on Windows 7 64-bit.

=Dependencies=
 * Visual Studio 2010 / Visual C++ 10.0 from http://www.microsoft.com/visualstudio/eng/downloads#d-2010-express
 (for other compilers some of the following steps could be different)
 * OpenCV (>= 2.3):
   # Download the newest Version from http://sourceforge.net/projects/opencvlibrary/files/opencv-win/
   # Run the _.exe_ file and extract
   # Create a new folder e.g. _C:\OpenCV2.4\_ and move the content of the extracted folder _opencv_ into there
   # Run _Start Menu > All Programs > Accessories > Command prompt_ as admin (right click on it and _run as administrator_) and type _command:SETX /M OPENCV_DIR C:\OpenCV2.4\build_ (or replace the directory as under point 3.)
   # Add _;%OPENCV_DIR%\x64\vc10\bin;_ for 64-bit or _;%OPENCV_DIR%\x86\vc10\bin;_ for 32-bit to the system path (in Windows 7 by right click on _My Computer_ on your desktop, select _Properties_, click on _Extended system properties_, go to the _Advanced_ tab, click on _Environment Variables_ and double click on _Path_ in the _System variables_ area)
   # Copy the files _tbb.dll_ and _tbb_debug.dll_ from _C:\OpenCV2.4\build\common\tbb\intel64\vc10\_ to _C:\OpenCV2.4\build\x64\vc10\bin_ for 64-bit and/or from _C:\OpenCV2.4\build\common\tbb\ia32\vc10\_ to _C:\OpenCV2.4\build\x86\vc10\bin_ for 32-bit
 * Boost (>= 1.46): 
   # Download the newest version from http://www.boostpro.com/download/
   # During installation, select _Visual C++ 10.0_, _multithreaded_ and _multithreaded debug_
   # If you need to save space, deselect all Boost libraries except for _Chrono_, _!DateTime_, _Filesystem_, _Regex_, _System_ and _Thread_
 * Interception:
   # Download the installer from https://github.com/downloads/oblitum/Interception/install-interception.exe
   # Run the command prompt as admin (see point 4. under OpenCV), navigate to the directory, where the downloaded _install-interception.exe_ is located and type _install-interception.exe /install_
   # Reboot your system before the first use of the the TIY library
 * CMake (optional - only when building TIY yourself):
 Downloadable from http://www.cmake.org/cmake/resources/software.html

=TIY library (and examples)=

Two options are available for installation:
 * Pre-build installers: one single installation file, no building necessary
 * Build from source (based on _CMake_): further customization posible, also if no suitable installer available

==A. Pre-build installers==

Download and install the newest _tiy-X.X.-win_ _.exe_ version from the [http://code.google.com/p/tiy/downloads/list Downloads] area.

Different installers are available:
 * 64-bit (_amd64_) or 32-bit (_i386_)
 * With examples (_EX_) or without
 * Examples only (_tiy`_`server_ or _tiy`_`client_)

==B. Build from source==

 # Download and unzip the newest _tiy-X.X..zip_ (or the _tiy`_`server_ or _tiy`_`client_ examples) file from the [http://code.google.com/p/tiy/downloads/list Downloads] section
 # Start _CMake_ (_cmake-gui_) and select the _src_ directory as source and the _build_ directory as build
 # Click _Configure_ and choose _Visual Studio 10_ (or 64-bit version) as generator
 # Change the options as you want to
  * _BUILD`_`client_: the client example will also be build
  * _BUILD`_`server_: the server example will also be build
 # Click _Configure_ and then _Generate_
 # Go into the _build_ directory and open the Visual Studio project by opening _tiy.sln_
 # Change the build configuration from _Debug_ to _Release_ and build the project _PACKAGE_ (right click on it and select _Build_)
 # Now you have an installer as availabel under [http://code.google.com/p/tiy/downloads/list Downloads] and install it as under point A.